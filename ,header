#!/usr/bin/env python3

import sys
import subprocess
from textwrap import dedent

script_name = ',header'
argvlen = len(sys.argv)

if not (argvlen in (2, 3, 4)):
    sys.exit(f"usages: \n{script_name} headerfile new \n{script_name} headerfile prototype description")

header_file = sys.argv[1]

if not header_file.endswith('.h'):
    sys.exit('Your header file should end with .h\nTry again')

# write the guards into the file
if argvlen == 3:
    subprocess.run(f"touch {header_file}", shell=True)
    guard_name = header_file.rstrip('.h').upper()+'_HEADER'
    content = dedent(f"""
#ifndef {guard_name}
#define {guard_name}
#endif
    """.strip()
    )

    with open(header_file, 'w', encoding='utf-8') as f:
        f.write(content)
    print(f'New {header_file} written')
    sys.exit()

prototype = sys.argv[2]
desc = sys.argv[3]

# check that the arguments have not been switched
if desc.endswith(');'):
    print('You may have swapped the prototype and description')
    print("Here's a reminder of the order:")
    print(f'{script_name} headerfile prototype description')
    sys.exit()

lines = []

with open(header_file, 'r', encoding='utf-8') as f:
    lines = f.readlines()

# add description, prototype, with additional new lines if necessary
last_line = lines.pop()
if lines[-1].startswith('#endif'):
	lines.append('\n')
lines.append(f'/* {desc} */\n')
lines.append(f'{prototype}\n\n')
lines.append(last_line)

# write new content to 'main.h'
with open(header_file, 'w', encoding='utf-8') as f:
    f.writelines(lines)
