#!/usr/bin/env python3

"""Creates an executable python script with a pre-filled shebang line and
optional `name == '__main__'` line.
"""

import argparse
import subprocess
import sys
from pathlib import Path
from textwrap import dedent

parser = argparse.ArgumentParser()
parser.add_argument('file', help='The name of the script file to create')
parser.add_argument('--main', action='store_true',
                    help="Adds the if __name__=='__main__' line")
parser.add_argument('-i', '--ignore', action='store_true',
                    help='Adds this script to a .gitignore file in the same directory')
parser.add_argument('--env', action='store_true',
                    help='Adds a shebang line that uses /usr/bin/env python3 instead\
                    of /usr/bin/python3')
parser.add_argument('--fn', help='Function prototype to add to the python file')
args = parser.parse_args()

# append .py extension if it was skipped
file = f'{args.file.split(".py")[0]}.py'
ignore = args.ignore

# Don't overwrite files unless stated
if Path('.', file).exists():
    overwrite = input(f'`{file}` already exists!\nOverwrite? (y/n): ')
    if overwrite.strip().startswith('n'):
        sys.exit('Okay. No files were changed! Bye!')

fn = str(args.fn) if args.fn else ''
shebang = '#!/usr/bin/env python3' if args.env else '#!/usr/bin/python3'
ellipsis_line = """..."""

if fn:
    brackets = '()' if '(' not in fn else ''
    fn = dedent(f"""    
    def {fn}{brackets}:
        {ellipsis_line}
    """).strip()

name_line = """if __name__ == '__main__':
    pass
""".strip() if args.main else ''

content = f"""
{shebang}

{fn}
{name_line}
""".strip()

command = f"""touch {file} \
    && echo "{content}" > {file} \
    && sudo chmod +x {file}
"""

subprocess.run(command, shell=True)

ignore_message = ''
if ignore:
    subprocess.run(f'echo {file} >> .gitignore', shell=True)
    ignore_message = '\nand added to .gitignore.'

print(f'`{file}` created successfully!{ignore_message}')
